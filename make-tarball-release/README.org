#+title: Creating MediaWiki releases

This document describes how this set of Makefiles drives tools like =make-release2.py= and the included =make-branch= to create MediaWiki releases.

* Simplicity itself
Ideally, when you are ready to create a release for, say, 1.35.0, you should only have to check out this repository and type
#+begin_src bash
$ make tarball releaseVer=1.35.0
$ make publish
#+end_src
to publish an new MediaWiki release.


The included scripts would
- Create a REL1_35 branch in the MediaWiki repository via Gerrit using the make-branch script.
- Checkout the REL1_35 branch.
- Ensure the vendor directory is up to date.
- Verify that MW_VERSION in Defines.php is set to 1.35.0 and set it if it isn't.
- Remove “THIS IS NOT A RELEASE YET” from the release notes.
- For each of the repositories of the included skins and extensions, create a REL1_35 branch
- Create a GPG signed tag (“1.35.0”) for all of the above with the comment “This is MediaWiki v1.35.0”
- Find the latest version of 1.33 that has been released by querying releases.wikimedia.org and create diffs against it.
- Create a full tarball, including extensions, as well as a tarball that only includes the core MediaWiki.
- Sign the artifacts produced.
- Give the user time to inspect the artifacts.
- Publish the work to releases.wikimedia.org

* How
The default target for the included Makefiles is a help screen that displays some of the available targets and some of the available configurables.  For example, when I type =make=, I see the following:

#+begin_example
$ make

  Usage:

    make <target> [flags...]

  Targets:

    help          Show this help prompt.
    morehelp      Show more targets
    publish       Publish a release
    removeTag     Remove the tag specified in releaseVer.
    showKeyInfo   Show information about the key used for signing.
    tag           Tag the checkout with the releaseVer.
    tarball       Checkout, tag, and build a tarball

  Flags: (Defaults in parenthesis)

    doSign            Sign the release (true)
    gitCommitEmail    Committer's email address (mah@nichework.com)
    gitCommitName     Committer's name (Mark A. Hershberger)
    keyId             KeyID to use (7956EE477F901A30)
    prevReleaseVer    The version to diff against (---)
    relBranch         What is the release branch is (---)
    releaseMsg        Release message (---)
    releaseTagMsg     The message to add when tagging (---)
    releaseVer        What version is being released (---)
    revision          Revision to tag or branch on (HEAD)

#+end_example

You will notice that several flags are filled with =---=.  These will be filled in when you specify a value for =releaseVer=:

#+begin_example
$ make releaseVer=1.30.1

  Usage:

    make <target> [flags...]

  Targets:

    help          Show this help prompt.
    morehelp      Show more targets and flags
    publish       Publish a release
    removeTag     Remove the tag specified in releaseVer.
    showKeyInfo   Show information about the key used for signing.
    tag           Tag the checkout with the releaseVer.
    tarball       Checkout, tag, and build a tarball

  Flags: (Defaults in parenthesis)

    doSign            Sign the release (true)
    gitCommitEmail    Committer's email address (mah@nichework.com)
    gitCommitName     Committer's name (Mark A. Hershberger)
    keyId             KeyID to use (7956EE477F901A30)
    prevReleaseVer    The version to diff against (1.30.0)
    relBranch         What is the release branch is (REL1_30)
    releaseMsg        Release message ("This is MediaWiki v1.30.1")
    releaseTagMsg     The message to add when tagging ("MediaWiki v1.30.1")
    releaseVer        What version is being released (1.30.1)
    revision          Revision to tag or branch on (HEAD)

$ make releaseVer=1.28.0

  Usage:

    make <target> [flags...]

  Targets:

    help          Show this help prompt.
    morehelp      Show more targets and flags
    publish       Publish a release
    removeTag     Remove the tag specified in releaseVer.
    showKeyInfo   Show information about the key used for signing.
    tag           Tag the checkout with the releaseVer.
    tarball       Checkout, tag, and build a tarball

  Flags: (Defaults in parenthesis)

    doSign            Sign the release (true)
    gitCommitEmail    Committer's email address (mah@nichework.com)
    gitCommitName     Committer's name (Mark A. Hershberger)
    keyId             KeyID to use (7956EE477F901A30)
    prevReleaseVer    The version to diff against (1.27.7)
    relBranch         What is the release branch is (REL1_28)
    releaseMsg        Release message ("This is MediaWiki v1.28.0")
    releaseTagMsg     The message to add when tagging ("MediaWiki v1.28.0")
    releaseVer        What version is being released (1.28.0)
    revision          Revision to tag or branch on (HEAD)

#+end_example
* local.mk
If you create a file named =local.mk=, it will be included and you can use it to store settings.

For example, while testing this system, I used the following settings in my =local.mk=:
#+begin_example
releaseVer=1.33.1
releaseServer=winkyfrown.com
tarballDir=/home/mah/domains/winkyfrown.com/public_html/mw-release
#+end_example
These allowed me to test the =publish= target without having access to =releases.wikimedia.org=.


* Release candidates

Release candidates are identified by having the string “.0-rc.X” (where X is a number) appended to the version.  Release canididates are understood to be the initial releases of a release branch, so they'll always be diffed against the last release of the previous major version.

* Missing actions
You may have noticed some missing actions from the above process.  These items are noted here so that they can be addressed later.
- Pushing the changes made to gerrit.
- Adding “THIS IS NOT A RELEASE YET” back to the release notes and leaving the branching in a state that is ready to prepare for 1.35.1.
- Updating MediaWiki.org with new release information.
- Sending announcment emails to mailing lists.
